name: Test

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - "Sources/**"
      - "Tests/**"
      - "Package.swift"
      - "Example/**"
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    branches: ["main"]
    paths:
      - "Sources/**"
      - "Tests/**"
      - "Package.swift"
      - "Example/**"

jobs:
  test:
    name: ${{ matrix.test-type }} Tests
    runs-on: macos-15
    strategy:
      matrix:
        test-type: [Llama, MLX]
    env:
      DEVELOPER_DIR: "/Applications/Xcode_16.3.app/Contents/Developer"
      TEST_RUNNER_GITHUB_MODEL_CACHE: "${{ github.workspace }}/model_cache"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache model file
        id: cache-model
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/model_cache
          key: model_cache

      - name: Run ${{ matrix.test-type }} tests
        run: TEST_RUNNER_GITHUB_ACTIONS_TEST="${{ matrix.test-type }}" xcodebuild test -scheme LocalLLMClient-Package -destination 'platform=macOS'

  build-example:
    runs-on: macos-15
    needs: test
    env:
      DEVELOPER_DIR: "/Applications/Xcode_16.3.app/Contents/Developer"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build Example app for macOS
        run: |
          cd Example
          xcodebuild build -project LocalLLMClientExample.xcodeproj -scheme LocalLLMClientExample -destination 'platform=macOS' CODE_SIGN_IDENTITY="-"

  build-ubuntu-x86_64:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev

      - name: Install Swift
        shell: bash
        run: |
          curl -O "https://download.swift.org/swiftly/linux/swiftly-$(uname -m).tar.gz" && \
          tar zxf "swiftly-$(uname -m).tar.gz" && \
          ./swiftly init --assume-yes --no-modify-profile --skip-install --quiet-shell-followup && \
          . ${SWIFTLY_HOME_DIR:-~/.local/share/swiftly}/env.sh && \
          hash -r
          swiftly install 6.1
          echo "SWIFTLY_HOME_DIR=${SWIFTLY_HOME_DIR}" >>"${GITHUB_ENV}"
          echo "SWIFTLY_BIN_DIR=${SWIFTLY_BIN_DIR}" >>"${GITHUB_ENV}"
          echo "${SWIFTLY_BIN_DIR}" >>"${GITHUB_PATH}"

      - name: Build package
        run: swift build
